{"title":"Downloads","markdown":{"yaml":{"title":"Downloads","subtitle":"Latest version and change logs","toc":false,"sidebar":false},"headingText":"Latest version","containsRefs":false,"markdown":"\n\n<!--\n-->\n\n[Download](download.qmd){.btn .btn-primary}\n[<i class=\"bi bi-github\"></i> GitHub](https://github.com/NicolasBoumal/manopt){.btn .btn-secondary}\n[Mailing list](https://docs.google.com/forms/d/1U9Ntex_rWI8NfCLPP_b8uE5xDnKXgXG-HVvpHdq1PFo/viewform?usp=send_form){.btn .btn-info}\n\nThe current version is 7.1 and was packaged on Sep. 30, 2022.\nThe file is about 750 Kb.  \n\nThe latest code is available on GitHub at all times, accepting pull requests.\n  \nGo to the [Getting Started](gettingstarted.qmd) page for installation instructions.\n  \n**It helps us to know our users.**\nPlease consider registering to our [mailing list to hear about updates](https://docs.google.com/forms/d/1U9Ntex_rWI8NfCLPP_b8uE5xDnKXgXG-HVvpHdq1PFo/viewform?usp=send_form).\n(Roughly one e-mail per year.) Thanks!\n  \n**Do you use Manopt for teaching?**\nPlease [get in touch](mailto:nicolas.boumal@epfl.ch)!\nWe'd love to know about this and get feedback.\n\n\n## Previous releases and change logs\n\n\n### [Manopt 7.1](download.qmd), packaged Sep. 30, 2022\n\n*   Solvers\n    *   Sizeable improvements to `trustregions` (the main solver):\n        *   Refactored `trustregions` to accommodate new subproblem solvers.\n        *   Sped up `trs_tCG` (the main subproblem solver for trustregions) by recycling computations after a step rejection.\n        *   Added new subproblem solver `trs_gep` to find a global optimum (based on code by Yuji Nakatsukasa).\n        *   Improved information logged and displayed.\n    *   Added Liu-Storey rule for `conjugategradient` solver.\n    *   Added constant step-size line-search helper `linesearch_constant`.\n\n*   Manifolds\n    *   Improvements to sympositivedefinitesimplexfactory and sympositivedefinitesimplexcomplexfactory.\n    *   Rotations factory now uses Rodrigues formulas when $n = 3$ for exp/log.\n    *   Several manifolds which are Lie groups now have a method `M.lie_identity()`: this returns the identity element of that group.\n\n*   Tools\n    *   Added `sinxoverx`, which computes $\\sin(x)/x$ such that $\\sin(0)/0 = 1$.\n    *   Added `getsize`, which estimates the memory footprint of an input (used to monitor caching).\n    *   Tool `tangentorthobasis` now accepts an initial set of vectors to build on.\n\n*   Other changes\n    *   Small improvements (mostly numerical) for spherefactory, obliquefactory, obliquecomplexfactory, sympositivedefinitefactory.\n    *   Renamed `tensorprod` to `tensorprod_ttemps` for better compatibility with new Matlab versions.\n    *   Updated and renamed example `positive_definite_karcher_mean.m` to `positive_definite_intrinsic_mean.m`.\n    *   Made importmanopt script more robust.\n\n  \n\n### [Manopt 7.0](downloads/Manopt_7.0.zip), packaged Sep. 5, 2021\n\n*   Core functionalities\n    *   Added support for automatic differentiation through `manoptAD`.\n\n*   Manifolds\n    *   Added `sympositivedefiniteBWfactory`.\n    *   Added `poincareballfactory`.\n    *   Added `fixedTTrankfactory`.\n    *   Added `multinomialdoublystochasticgeneralfactory`.\n    *   Added `tangent2ambient` (identity) to some important manifolds.\n    *   Added `pairmean` to `hyperbolicfactory`.\n\n*   Tools\n    *   Added checks to `checkmanifold`.\n    *   Tools `multiprod`, `multitransp` etc. are now wrappers for the more efficient builtin functions `pagemtimes` and related ones. They are also compatible with GPUs and with AD.\n\n*   Solvers\n    *   New feature: in `trustregions` and `steepestdescent` (for now), users can now specify an `options.hook` function handle that allows one to change the current point `x` using external code, at each iteration, if desired.  \n    \n*   Other changes\n    *   Improved compatibility with Octave 6.1.0.\n    *   Fixed `sylvester_nochecks` for recent Matlab versions.\n    *   Several small bug fixes and improvements.\n\n  \n\n### [Manopt 6.0](downloads/Manopt_6.0.zip), packaged May 19, 2020\n\n*   Modifications to core engine\n    *   Made it possible for `egrad2rgrad` and `ehess2rhess` in a factory-produced manifold to take `(storedb, key)` as input. The purpose is to allow some automatic caching of redundant computations in `ehess2rhess` wrt `egrad2rgrad`. If they do, then they should accept to be called without `(storedb, key)`, so as not to generate errors with `powermanifold` and `productmanifold`, which cannot handle this.\n\n*   New geometries\n    *   Hyperbolic manifold in the hyperboloid model: [`hyperbolicfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/hyperbolic/hyperbolicfactory.m).\n    *   Tensors of fixed multilinear rank in Tucker format: [`fixedranktensorembeddedfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/fixedranktensors/fixedranktensorembeddedfactory.m).\n    *   Linear subspaces of linear spaces: [`euclideansubspacefactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/euclidean/euclideansubspacefactory.m).\n    *   Unitary matrices: [`unitaryfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/unitaryfactory.m).\n    *   Sparse matrices with fixed sparsity pattern (inefficient implementation): [`euclideansparsefactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/euclidean/euclideansparsefactory.m).\n    *   Manifold of $k$ positive definite matrices whose sum is the identity matrix: [`sympositivedefinitesimplexfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/symfixedrank/sympositivedefinitesimplexfactory.m) and [`sympositivedefinitesimplexcomplexfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/symfixedrank/sympositivedefinitesimplexcomplexfactory.m).\n\n*   New tools\n    *   Added [`randsym`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/randsym.m), [`randherm`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/randherm.m), [`ranskewh`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/randskewh.m) and [`randunitary`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/randunitary.m).\n    *   To match the existing multiherm, added [`multiskewh`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/multiskewh.m).\n    *   New tool [`qr_unique`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/qr_unique.m) to compute the unique Q-factor of a full column rank matrix.\n    *   Added tool to form the matrix of a linear operator between two tangent spaces: [`operator2matrix`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/operator2matrix.m). Useful for prototyping / debugging / analysis.\n\n*   Solvers\n    *   Added [gradient descent](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/arc/arc_gradient_descent.m) and [nonlinear conjugate gradient](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/arc/arc_conjugate_gradient.m) subproblem solvers for Riemannian ARC.\n    *   Improved numerical stability of Lanczos subproblem solver for ARC.\n    *   Changed default parameters of ARC and added checks to react if subproblem solver fails.\n    *   Added preconditioner support to `stochasticgradient` solver.\n\n*   Other changes\n    *   Fix to `productmanifold` so that it defines a method for the product only if that method is available for each element.\n    *   Added a new retraction to generalized Stiefel manifold, and made it the default retraction.\n    *   Minor changes to `multinomialfactory` and also added `exp`, `log` and `dist` functions.\n    *   For the manifold `fixedrankembeddedfactory`: added tools `triplet2matrix` and `matrix2triplet`, improved numerical behavior of the retraction for ill-conditioned tangent vectors and vec/mat replaced with lower dimensional isometries, which speed up use of `hessianspectrum` with that factory considerably.\n    *   Changes to `grassmannfactory`: tweaks to `ehess2rhess` for numerical accuracy and added `pairmean`.\n    *   Added exp, log and dist in the factory `symfixedrankYYfactory`.\n    *   Differentials of matrix functions (`dexpm, dlogm, dsqrtm, dfunm`) now also return the matrix function evaluation as a by-product.\n    *   The tool `checkdiff` (hence also `checkgradient`) now checks that the cost function is real.\n    *   The tool `checkhessian` now checks that the Hessian is a linear operator.\n    *   Added some extra checks to `checkmanifold`, notably to test vec/mat and dim; and improved test of exp/log/dist.\n    *   Refactored a number of retractions to use new tool `qr_unique`.\n    *   Several improvements to `multinomialdoublystochasticfactory`.\n    *   The tool `tangentspacefactory` should now work with factories involving a non-identity `tangent2ambient`.\n    *   Bug fix: memory usage could increase with inner iterations of tCG inside `trustregions` when using finite difference approximation of the Hessian. This is no longer the case.\n    *   Generally improved comments in several files.\n\n  \n\n### [Manopt 5.0](downloads/Manopt_5.0.zip), packaged September 10, 2018\n\n*   New solvers\n    *   ARC: adaptive regularization by cubics, [`arc`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/arc/arc.m), as an alternative to [`trustregions`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/trustregions/trustregions.m).\n\n*   Modifications to core engine\n    *   New counters system: especially useful to keep track of cost/grad/hess calls, and also of other important computations inside of (and possibly shared among) those. See [`incrementcounter`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/core/incrementcounter.m) and [`statscounter`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/statscounters.m) and the example [`using_counters`](https://github.com/NicolasBoumal/manopt/blob/master/examples/using_counters.m). As also shown in that example, the `problem.stopfun` handle for stopping criteria can access the counters, making it possible to stop for more sophisticated reasons than before.\n    *   The value of the cost function is now always cached. This leads to significant speed-ups in algorithms which use a line-search that evaluates the cost function (`steepestdescent`, `conjugategradient`, `barzilaiborwein`, `rlbfgs` included.)\n    *   The Riemannian gradient and Euclidean gradient are now cached by default. This is made practical by the new `remove()` functionalities of `StoreDB` (see below). This should be particularly useful for algorithms which use finite difference approximations of the Hessian, and when the user supplies a Euclidean Hessian (which, to be converted to Riemannian Hessian, requires the Euclidean gradient). This caching happens regardless of the user's own caching efforts, which should make the overall system easier to understand, as compared to previous versions of Manopt.\n    *   Core changes to [`StoreDB`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/core/StoreDB.m). Essentially two changes: (1) `purge()` now purges based on latest access time (access = read or write) rather than latest write time. (2) Added functions `remove()` and `removefirstifdifferent()`, which makes it possible for solvers and line-search algorithms to tell the `StoreDB` when a certain store is no longer relevant. For solvers that use the new `remove()` capabilities, `purge()` and `storedepth` now have very little importance. Furthermore, access is now more protected, with warnings issued if improper keys are accessed; this should make it easier to debug new solvers, and it already makes it possible to cache far fewer points. This rationalizes the choice of caching more things for points that matter (including cost and gradient). Line-search algorithms and all important solvers now use this system.\n    *   Added support for GPU. The following manifolds can now manipulate points and tangent vectors directly on the GPU, sometimes leading to huge speed-ups: `spherefactory`, `complexcirclefactory`, `stiefelfactory`, `grassmannfactory`; see the new example [`using_gpu`](https://github.com/NicolasBoumal/manopt/blob/master/examples/using_gpu.m).\n\n*   New tools\n    *   [`orthogonalizetwice`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/orthogonalizetwice.m) runs the rewritten orthogonalize tool twice for better accuracy when orthonormalizing an ill-conditioned basis of tangent vectors.\n    *   [`lyapunov_symmetric`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/lyapunov_symmetric.m) and [`lyapunov_symmetric_eig`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/lyapunov_symmetric_eig.m): solvers for Lyapunov equation $AX + XA = C$ with symmetric (or Hermitian) matrix $A$; acts as a pseudo-inverse. [`sylvester_nochecks`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/sylvester_nochecks.m): Matlab's sylvester solver without input checks (much faster for small matrices); These are now used everywhere in Manopt to remove dependency on `lyap`, which is a tool from the Control Toolbox.\n    *   [`stopifdeletedfile`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/stopifdeletedfile.m) and [`stopifclosedfigure`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/stopifclosedfigure.m): interactive stopping criteria that allow to stop a solver at any point, and let it finish gracefully and continue executing the rest of the code (also for execution on a distant server without GUI.)\n    *   [`checkmanifold`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/checkmanifold.m): began a new tool to run a collection of tests on manifold structures returned by factories; this is an early version to collect ideas as they come.\n\n*   New geometries\n    *   [`constantfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/euclidean/constantfactory.m), which can be used to fix certain variables in a [`productmanifold`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/productmanifold.m).\n    *   [`multinomialsymmetricfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/multinomial/multinomialsymmetricfactory.m) and [`multinomialdoublystochasticfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/multinomial/multinomialdoublystochasticfactory.m) for doubly stochastic matrices with (strictly) positive entries, symmetric or not; contributed by [Ahmed Douik](https://scholar.google.com/citations?user=_i7hPbgAAAAJ&hl=en). Comes with a tool named [`doubly_stochastic`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/multinomial/doubly_stochastic.m) which implements Sinkhorn's algorithm to project to doubly-stochastic matrices.\n    *   `[positivefactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/positive/positivefactory.m) deals with strictly positive numbers.\n\n*   Bug fixes\n    *   Fixed `M.retr2` (second-order retraction) in `rotationsfactory` for $k > 1$.\n\n*   Other changes\n    *   Installation instructions and `importmanopt` now include `savepath`.\n    *   [`orthogonalize`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/orthogonalize.m) tool is now a modified Gram-Schmidt algorithm, which is more stable than the previous code.\n    *   `strict_inc_func` in [`rlbfgs`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/bfgs/rlbfgs.m) solver changed following recommendations of Wen Huang.\n    *   More heads up messages regarding the use of `M.tangent2ambient` with some manifolds.\n    *   tCG solver for `trustregions` inner problems is now more stable (numerically) for fine convergence steps.\n    *   Added inverse retraction for `grassmannfactory`, `stiefelfactory` (both QR and polar retractions, both of which are now available), `spherefactory`, `obliquefactory`, `rotationsfactory` (both QR and polar) and `complexcirclefactory`.\n    *   [`neldermead`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/neldermead/neldermead.m) solver now uses retraction instead of exponential.\n    *   If the exponential is not implemented for a manifold, `M.exp` is now no longer defined. It used to be that M.exp would issue a warning, then return the result of `M.retr`. But this causes a deluge of warnings in functions such as checkhessian. Now, instead, such tools check if M.exp is defined; if not, they use M.retr and issue a single message to inform the user of the consequences. If your personal code uses M.exp() without checking for manifolds that didn't have a proper implementation, you may want to check if this update breaks that part. It should be an easy fix.\n    *   Many small improvements here and there...\n\n  \n\n### [Manopt 4.0](downloads/Manopt_4.0.zip), packaged September 9, 2017\n\n*   New solvers\n    *   Limited-memory BFGS, [`rlbfgs`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/bfgs/rlbfgs.m): a Riemannian version of the quasi-Newton solver, implemented by Changshuo Liu based on work by Wen Huang et al.\n    *   [`barzilaiborwein`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/barzilaiborwein/barzilaiborwein.m): a gradient method with step-size selection based on a Barzilai-Borwein heuristic and line-search, contributed by Margherita Porcelli and Bruno Iannazzo.\n    *   [`stochasticgradient`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/stochasticgradient/stochasticgradient.m): stochastic gradient algorithm on manifolds, together with its step-size selection algorithm `stepsize_sg` and a new example: `PCA_stochastic`.\n\n*   New tools\n    *   `tangent2vec`: given a tangent vector and an orthogonal basis on the corresponding tangent space, returns the coordinates of the vector in that basis.\n    *   `criticalpointfinder`: allows to find critical points of an optimization problem (useful to study saddle points of a non-convex problem for example.)\n\n*   New geometries\n    *   `realphasefactory`: to optimize over vectors with unit-modulus complex entries (phases) satisfying symmetries such that they could be the phases of the DFT (`fft`) of a real vector.\n\n*   Modifications to core engine\n    *   Added the capacity to provide a subgradient in a problem description, and to call for it in a solver. This, together with the tool `smallestinconvexhull`, is an important step toward integrating nonsmooth solvers in Manopt. See `canGetSubgradient` and `getSubgradient`. Define with `problem.subgrad(x, tol)`, where `x` is a point on a manifold `problem.M` and `tol` (nonnegative) is a tolerance in computing the subgradient (0 by default).\n\n*   Bug fixes\n    *   `tangentspacefactory` now has correct tangent, `egrad2rgrad` and `ehess2rhess` tools, including projections (thanks to a comment by Jesus Briales on the forum.)\n    *   For Euclidean manifolds, `M.tangent` functions were changed from identity to `M.proj`.\n\n*   Smaller things\n    *   `sympositivedefinitefactory` now has a cheaper yet second-order retraction, as suggested by Wen Huang.\n    *   `euclideancomplexfactory` now also handles multidimensional arrays, just like its real counterpart.\n    *   `smallestinconvexhull` tool now accepts a tolerance as optional input.\n    *   Further improved accuracy of distance function computations in all sphere / oblique manifolds with `asin` function instead of `acos` without branching, following discussions with Bruno Iannazzo and P.-A. Absil.\n    *   Two new options for `linesearch_hint`: allows to disable backtracking and allows to disable forcing of a non-increasing cost.\n    *   `fixedrankembeddedfactory` now has an orthographic retraction provided by Teng Zhang as `M.retr_ortho`.\n    *   Many, many smaller improvements to code and documentation.\n\n  \n\n### [Manopt 3.0](downloads/Manopt_3.0.zip), packaged November 12, 2016.\n\n*   Code moved to [GitHub](https://github.com/NicolasBoumal/manopt)! Now accepting pull requests, and accelerating distribution of patches.\n*   Bug fixes\n    *   Logic bug in `linesearch`: `lsmem` handling corrected thanks to Wen Huang. The default line-search algorithm for steepest descent should now be much faster.\n    *   Logic bug in `getGradient` when using `problem.grad` with a different number of inputs compared to `problem.cost`.\n    *   Corrected logic in plotting step of example `low_rank_dist_completion`.\n    *   `obliquefactory`, in transposed mode, had an incorrect `M.log`.\n\n*   Modifications to core engine\n    *   Added capability to obtain a partial gradient (Euclidean or Riemannian) of a cost function by specifying `problem.partialgrad` or `problem.partialegrad` coupled with `problem.ncostterms`. This is an important step to simplify the future addition of stochastic gradient methods. Use cases are: if `problem.cost` is expressed as a sum of `problem.ncostterms` terms, then `problem.partialgrad` accepts a point `x` and an index set sample so that only the gradient with respect to terms indexed in sample is computed and returned.\n    *   Added possibility to define `problem.approxgrad`, to provide an approximation of the gradient. This can be populated with a generic gradient approximation based on finite differences via `approxgradientFD`. Solvers do this by default if they need a gradient and none is given. This feature is slow, but may be useful for prototyping. It is slow because Manopt generates an orthonormal basis of the tangent space, and compute a finite difference approximation of the directional derivative along each basis vector to get an approximate gradient (see also next item and new example `thomson_problem`.)\n    *   `getGradient` now knows how to compute the gradient if the directional derivatives are accessible. This involves generating an orthonormal basis of the tangent space at the current point, then evaluating the directional derivative along each basis vector and taking the appropriate linear combination. This is very slow, especially for high dimensional manifolds.\n\n*   New tools\n    *   `lincomb` for a generic way of computing a long linear combination of tangent vectors.\n    *   `grammatrix` to compute the Gram matrix of a collection of tangent vectors.\n    *   `orthogonalize` to orthogonalize a basis of tangent vectors.\n    *   `tangentorthobasis` to obtain a random orthonormal basis of a tangent space, generically.\n    *   `smallestinconvexhull` to compute the smallest tangent vector in the convex hull of a given collection of tangent vectors.\n    *   `hessianmatrix` to get a matrix representing the Hessian at a point in an orthonormal tangent basis.\n    *   `checkretraction` allows, for manifolds which have a correct exponential implemented, to verify the order of agreement between the retraction and the exponential, in order to determine numerically if the retraction is first- or second-order.\n\n*   New examples\n    *   `elliptope_SDP` solves SDPs over positive semidefinite matrices with diagonal of all-ones. This should run faster than the Max-Cut example for quite a few things.\n    *   `elliptope_SDP_complex`, same as above for complex matrices. This solves the SDP which appears in PhaseCut and phase synchronization, for example.\n    *   `thomson_problem` to illustrate the new features that allow to not specify the gradient of the cost (slow, but good for prototyping.)\n\n*   New geometries\n    *   `skewsymmetricfactory` for skew-symmetric matrices (Euclidean geometry)\n    *   `obliquecomplexfactory`, to work with complex matrices whose columns (or rows) all have unit norm\n\n*   Modifications to previous behavior\n    *   `symfixedrankYYcomplexfactory` now has a Riemannian metric matching that of `euclideanfactory` (it was scaled down by 2 as compared to previous Manopt versions.) This makes it easier to switch between those two geometries. Relevant changes propagated to `radio_interferometric_calibration`.\n    *   `hessianextreme` now returns the info structure returned by the internal solver call. The helper tool `tangentspherefactory` now incorporates extra projections to ensure the vector returned by `hessianextreme` is indeed a tangent vector (former version could suffer from numerical drift.)\n    *   At the end of `generalized_eigenvalue_computation`, added a rotation of `Xsol` to match the definition of generalized eigenvectors (the eigenvalues were fine.)\n\n*   Numerous minor improvements; highlights:\n    *   `rotationsfactory` now has a function `M.retr2` which is a second-order retraction.\n    *   `spherefactory` and related sphere geometries now have a distance function `M.dist` which is orders of magnitude more accurate for close-by points.\n    *   `neldermead` now respects `options.verbosity < 2`.\n    *   `plotprofile` and `surfprofile` have now mostly optional inputs, making them easier to call for a quick glimpse at the cost function.\n\n  \n\n### [Manopt 2.0](downloads/Manopt_2.0.zip), packaged July 6, 2015.\n\n*   Modifications to core engine\n    *   Revamped the internal hashing system used for caching: Manopt no longer uses hashing, which leads to speed-ups and cleaner internal code. Solvers need to be adapted consequently, to use the `StoreDB` class.\n    *   The caching system now offers a shared memory, which can be accessed and modified at all points. This can notably be used to count function evaluations, or to produce Hessian approximations which require previous iterations memory (such as BFGS for example).\n    *   Because of the new class StoreDB, Octave compatibility is unfortunately compromised until Octave supports Matlab's classdef object oriented programming.\n    *   New cost description function: `sqrtprecon`, for the square root of the preconditioner (used in `hessianspectrum`).\n    *   The privatetools directory is now named core, and is documented.\n\n*   New geometries:\n    *   `specialeuclideanfactory` (for rigid body motions).\n    *   `multinomialfactory` (for probability distributions, i.e., simplex elements).\n    *   `euclideancomplexfactory` (for complex matrices).\n    *   `spheresymmetricfactory` (for unit norm symmetric matrices)\n    *   `stiefelcomplexfactory` (for complex orthonormal matrices)\n    *   `stiefelgeneralizedfactory` (for matrices which are orthonormal in another basis)\n    *   `stiefelstackedfactory` (for multiple orthonormal matrices of same size, represented in stacked form)\n    *   `grassmanncomplexfactory` (complex Grassmannian, for complex subspaces of $\\mathbb{C}^n$)\n    *   `grassmanngeneralizedfactory` (for optimization over subspaces, represented via orthonormal bases in a non-standard basis)\n    *   `symfixedrankYYcomplexfactory` (for complex fixed-rank positive semidefinite matrices)\n    *   `fixedrankfactory_tucker_preconditioned` (for optimization over fixed-rank tensors, in Tucker format)\n    *   `centeredmatrixfactory` (matrices whose rows or columns sum to zero)\n\n*   Other improvements:\n    *   `spherecomplexfactory`: added `ehess2rhess`.\n    *   `complexcirclefactory`: distance function corrected.\n    *   Contributions more explicitly acknowledged in some files, notably via BibTex entries.\n    *   `hessianspectrum`: output eigenvalues now sorted, and the square root of the preconditioner, if available, must now be given through `problem.sqrtprecon`, not as an additional input. An option now allows to ask for the Hessian spectrum or the preconditioned Hessian spectrum, explicitly.\n    *   New management of Hessian approximations and preconditioners. The file `hessianapproxFD` encapsulates Manopt's standard approximation, with access to options. A first generic preconditioner allows solving linear systems involving the Hessian (for Newton-type methods): `preconhessiansolve`.\n    *   Line-search algorithms now work with `StoreDB`, and as a result have a simplified calling pattern. There is also a new one: `linesearch_decrease`.\n\n*   New [tools](https://github.com/NicolasBoumal/manopt/tree/master/manopt/tools):\n    *   `manoptsolve`, to automatically call an appropriate solver (or a dynamically chosen solver) on a problem structure.\n    *   `statsfunhelper`, to ease the use of `options.statsfun`, which allows recording custom statistics at each iteration during optimization. See the tutorial.\n    *   `hessianextreme`, to compute minimal and maximal eigenvectors and eigenvalues of the Hessian of a cost function.\n    *   `surfprofile`, to complement `plotprofile`: used to plot a cost function restricted to a 1D or 2D subspace of a tangent space.\n    *   `tangentspherefactory` and `tangentspacefactory`, to obtain a manifold representation of the unit sphere on the tangent space to a manifold at a given point, or a representation of the whole tangent space. Useful to solve optimization problems over those spaces.\n    *   `dfunm`, `dexpm`, `dlogm`, `dsqrtm` : compute the Fréchet derivatives of matrix functions.\n\n*   Trust-region solver:\n    *   As of Manopt 1.0.6, the inner solver tCG monitors the model cost; an (innocuous) logic bug was corrected there. Theory behind this feature is now better understood (a paper reference + BibTex was added).\n    *   Warns if many TR+ / TR- steps are detected, to suggest changing parameter values.\n    *   Uses safe version of tic/toc timers (originally because Octave now supports them).\n    *   In case `rho` evaluates to `NaN` (which really should not happen), the code now ensures that the step is rejected and the radius decreased, thus preventing stagnation. In an adversely crafted example, this helped the solver escape the region where NaN's appear (again, this is not supposed to happen, but it's good to handle it nonetheless).\n    *   Many more comments inside the code.\n\n*   New [examples](https://github.com/NicolasBoumal/manopt/tree/master/examples):\n    *   `robust_pca`, illustrating how to smooth a nonsmooth cost function (here, on the Grassmann manifold).\n    *   `low_rank_dist_completion`, illustrating usage of Manopt as a building block in a rank-incremental optimization algorithm for SDP.\n    *   `dominant_invariant_subspace_complex`, adapting `dominant_invariant_subspace` to the complex case.\n    *   `radio_interferometric_calibration`, illustrating the usage of the complex fixed-rank manifold.\n    *   `nonlinear_eigenspace`, showing how to address certain nonlinear eigenvalue problems.\n    *   `essential_svd`, demonstrating the new geometry `essentialfactory`.\n    *   `generalized_eigenvalue_computation`, shows how to use `grassmanngeneralizedfactory` to solve generalized eigenvalue problems.\n    *   `shapefit_smoothed`, does sensor network localization from pairwise direction measurements, following the [ShapeFit](https://arxiv.org/abs/1506.01437) paper.\n\n  \n\n### [Manopt 1.0.7](downloads/Manopt_1.0.7.zip), packaged August 12, 2014.\n\n*   Added the `ehess2rhess` function to `complexcirclefactory`.\n*   Major revision of `fixedrankembeddedfactory` for support of optimization over fixed-rank matrices. It is now better documented, comes with an example called `low_rank_matrix_completion`, and also has support for `ehess2rhess` and `tangent2ambient`, a proper vector transport, works with the `hessianspectrum` tool, ... This revision was executed with the precious and frequent help of Bart Vandereycken, who first described this geometry in a [paper](https://epubs.siam.org/doi/abs/10.1137/110845768).\n*   All solvers now also return the `options` structure, to make it easier to investigate what options a solver uses and what their default values are.\n*   It is now possible to specify a line-search hint function in the `problem` structure; the result of that function will be used as a first guess in an Armijo backtracking line-search procedure, `linesearch_hint`. This is very useful if, for a given problem, you are able to make a good guess at how far along the search line one should look. It is much easier this way than with the previous way, which required implementing a whole new line-search algorithm.\n*   Generally improved textual outputs (warnings, iteration information, stopping reasons...).\n*   The documentation (tutorial, reference) was updated to reflect all of these changes.\n*   The `sympositivedefinitefactory` now has the correct `dim()` function and implements a new vector transport as explained in the [example](https://github.com/NicolasBoumal/manopt/blob/master/examples/positive_definite_intrinsic_mean.m).\n\n  \n\n### [Manopt 1.0.6](downloads/Manopt_1.0.6.zip), packaged June 25, 2014.\n\n*   For uses of the `trustregions` solver with a nonlinear approximation of the Hessian (such as, for example, the default one if you do not specify a Hessian at all), the truncated-CG algorithm now explicitly checks that the model cost decreases with (inner) iterations. If an increase is witnessed (which is bad), tCG now returns the best step so far, which is always at least the Cauchy step.\n*   The `sympositivedefinitefactory` geometry for positive definite matrices was revised. It had a number of mistakes in it due to an incorrect assumption. You can access the file before 1.0.6 is released on [the forum](https://groups.google.com/forum/embed/?place=forum%2Fmanopttoolbox&showsearch=true&showtabs=false&theme=default#%21topic/manopttoolbox/nyX2rhKB9x4).\n*   Small bug fix in `packing_on_the_sphere` example, along an improvement of how the smoothing term is computed numerically.\n*   Added a Riemannian Hessian conversion tool for the Stiefel manifold, `ehess2rhess`.\n*   Added a new (Euclidean) manifold, `symmetricfactory`, to deal with symmetric matrices.\n*   Multiple enhancements and bug fixes for the embedded geometry of fixed rank matrices `fixedrankembeddedfactory`: now works with `checkgradient`, changed hash and typical dist, and the vector transport is now correct (it was wrong before, leading to failure of CG and RTR-FD). Thanks to Bart Vandereycken for the correct code.\n*   Random vector generation in Stiefel and Grassmann now make more sense.\n*   `PSO` (Particle Swarm Optimization) solver debugged to work with product and power manifolds too.\n*   Bug fix in `grassmannfactory` retraction for $k > 1$, and added final re-orthonormalization at the end of exponential map following forum discussions.\n*   The functions in `elliptopefactory` are now a tad faster, using `bsxfun`.\n\n  \n\n### [Manopt 1.0.5](downloads/Manopt_1.0.5.zip), packaged January 2nd, 2014.\n\n*   Many files are now better commented and documented. In particular, the solvers now have quite complete documentation in code, available using Matlab's help command.\n*   The trust region solver was modified substantially. The algorithm is now slightly different from the previous versions, but is cleaner in its handling of errors, and behaves almost the same as before for normal operations. In particular, the fine-convergence heuristic has been changed to match a standard heuristic from the literature (see in code for references and the relevant option). The online documentation (UPDATE 2024: this documentation was deprecated) was extended as well. The original trust region radius (`Delta0` and `Delta_bar`) are now interpreted correctly. Their values are different from earlier Manopt versions as a result. if you get a lot of TR+ or TR- for the first few iterations, you may want to tweak those options.\n*   New geometry: `sympositivedefinitefactory`, for symmetric, positive definite matrices. Related example script: `positive_definite_karcher_mean`.\n*   Line search algorithms have been heavily modified. The basic line search for example is now invariant under shifting and rescaling of the cost function, and the built-in line search algorithms now accept options too. Line searches now do not expect to be given a normalized search direction anymore, and they can decide whether to use the norm as supplemental information or to be unaffected by it. For example, the default line search for the conjugate gradient solver (the adaptive line search) is not invariant to the norm of the search direction.\n*   New example for sparse PCA via optimization on the Stiefel manifold.\n*   Potential bug (that never triggered) with `purgeStoredb` corrected.\n\n  \n\n### [Manopt 1.0.4](downloads/Manopt_1.0.4.zip), packaged August 22nd, 2013.\n\n*   This release is a first step toward compatibility with Octave. We're not there yet, but in the examples folder, you will find `maxcut_octave` (UPDATE: removed in 1.0.8), which should run in Octave 3.6.4. In there, more info about compatibility issues and limitations are provided.\n*   Manopt is not organized in a Matlab package anymore (so folders are called folder and not +folder): no `import` anymore. Simply call `importmanopt` to add all Manopt functions to the path, once.\n*   Sign error in right-hand side of Lyapunov equation in `elliptopefactory.projection` corrected.\n\n  \n\n### [Manopt 1.0.3](downloads/Manopt_1.0.3.zip), packaged July 26, 2013.\n\n*   The new [examples](https://github.com/NicolasBoumal/manopt/tree/master/examples) directory now contains documented examples.\n*   Added manifolds `spectrahedron` and `elliptope`, for symmetric positive semidefinite fixed-rank matrices with constraints on the diagonal or the trace. Notably useful for max-cut like SDP relaxations (see examples) and correlation matrix approximation / completion etc.\n*   The Riemannian gradient and Hessian may be given via their Euclidean counterparts, using `problem.egrad` and `problem.ehess`.\n*   Improved `checkgradient` and `checkhessian` tools.\n*   Added Riemannian log map for the Grassmann manifold.\n*   Made `egrad2rgrad` and `ehess2rhess` available in more geometries.\n*   Added the tool `hessianspectrum` to compute the eigenvalues of the Hessian (with or without preconditioner).\n*   Added notions of `tangent` and `tangent2ambient` to manifolds.\n*   Added notions of `vec` and `mat` for manifolds, to represent tangent vectors as column vectors.\n\n  \n\n### [Manopt 1.0.2](downloads/Manopt_1.0.2.zip), packaged June 11, 2013.\n\n*   Improved `trustregions` solver (e.g., avoids a redundant Hessian computation).\n*   Improved `conjugategradient` solver: now admits preconditioning.\n*   Reorganized fixedrank geometries (not backward compatible).\n*   Many small improvements and bug fixes.\n\n  \n\n### [Manopt 1.0.1](downloads/Manopt_1.0.1.zip), packaged February 7, 2013.\n\n  \n\n### [Manopt 1.0](downloads/Manopt_1.0.zip), packaged January 3rd, 2013.\n","srcMarkdownNoYaml":"\n\n<!--\n## Latest version\n-->\n\n[Download](download.qmd){.btn .btn-primary}\n[<i class=\"bi bi-github\"></i> GitHub](https://github.com/NicolasBoumal/manopt){.btn .btn-secondary}\n[Mailing list](https://docs.google.com/forms/d/1U9Ntex_rWI8NfCLPP_b8uE5xDnKXgXG-HVvpHdq1PFo/viewform?usp=send_form){.btn .btn-info}\n\nThe current version is 7.1 and was packaged on Sep. 30, 2022.\nThe file is about 750 Kb.  \n\nThe latest code is available on GitHub at all times, accepting pull requests.\n  \nGo to the [Getting Started](gettingstarted.qmd) page for installation instructions.\n  \n**It helps us to know our users.**\nPlease consider registering to our [mailing list to hear about updates](https://docs.google.com/forms/d/1U9Ntex_rWI8NfCLPP_b8uE5xDnKXgXG-HVvpHdq1PFo/viewform?usp=send_form).\n(Roughly one e-mail per year.) Thanks!\n  \n**Do you use Manopt for teaching?**\nPlease [get in touch](mailto:nicolas.boumal@epfl.ch)!\nWe'd love to know about this and get feedback.\n\n\n## Previous releases and change logs\n\n\n### [Manopt 7.1](download.qmd), packaged Sep. 30, 2022\n\n*   Solvers\n    *   Sizeable improvements to `trustregions` (the main solver):\n        *   Refactored `trustregions` to accommodate new subproblem solvers.\n        *   Sped up `trs_tCG` (the main subproblem solver for trustregions) by recycling computations after a step rejection.\n        *   Added new subproblem solver `trs_gep` to find a global optimum (based on code by Yuji Nakatsukasa).\n        *   Improved information logged and displayed.\n    *   Added Liu-Storey rule for `conjugategradient` solver.\n    *   Added constant step-size line-search helper `linesearch_constant`.\n\n*   Manifolds\n    *   Improvements to sympositivedefinitesimplexfactory and sympositivedefinitesimplexcomplexfactory.\n    *   Rotations factory now uses Rodrigues formulas when $n = 3$ for exp/log.\n    *   Several manifolds which are Lie groups now have a method `M.lie_identity()`: this returns the identity element of that group.\n\n*   Tools\n    *   Added `sinxoverx`, which computes $\\sin(x)/x$ such that $\\sin(0)/0 = 1$.\n    *   Added `getsize`, which estimates the memory footprint of an input (used to monitor caching).\n    *   Tool `tangentorthobasis` now accepts an initial set of vectors to build on.\n\n*   Other changes\n    *   Small improvements (mostly numerical) for spherefactory, obliquefactory, obliquecomplexfactory, sympositivedefinitefactory.\n    *   Renamed `tensorprod` to `tensorprod_ttemps` for better compatibility with new Matlab versions.\n    *   Updated and renamed example `positive_definite_karcher_mean.m` to `positive_definite_intrinsic_mean.m`.\n    *   Made importmanopt script more robust.\n\n  \n\n### [Manopt 7.0](downloads/Manopt_7.0.zip), packaged Sep. 5, 2021\n\n*   Core functionalities\n    *   Added support for automatic differentiation through `manoptAD`.\n\n*   Manifolds\n    *   Added `sympositivedefiniteBWfactory`.\n    *   Added `poincareballfactory`.\n    *   Added `fixedTTrankfactory`.\n    *   Added `multinomialdoublystochasticgeneralfactory`.\n    *   Added `tangent2ambient` (identity) to some important manifolds.\n    *   Added `pairmean` to `hyperbolicfactory`.\n\n*   Tools\n    *   Added checks to `checkmanifold`.\n    *   Tools `multiprod`, `multitransp` etc. are now wrappers for the more efficient builtin functions `pagemtimes` and related ones. They are also compatible with GPUs and with AD.\n\n*   Solvers\n    *   New feature: in `trustregions` and `steepestdescent` (for now), users can now specify an `options.hook` function handle that allows one to change the current point `x` using external code, at each iteration, if desired.  \n    \n*   Other changes\n    *   Improved compatibility with Octave 6.1.0.\n    *   Fixed `sylvester_nochecks` for recent Matlab versions.\n    *   Several small bug fixes and improvements.\n\n  \n\n### [Manopt 6.0](downloads/Manopt_6.0.zip), packaged May 19, 2020\n\n*   Modifications to core engine\n    *   Made it possible for `egrad2rgrad` and `ehess2rhess` in a factory-produced manifold to take `(storedb, key)` as input. The purpose is to allow some automatic caching of redundant computations in `ehess2rhess` wrt `egrad2rgrad`. If they do, then they should accept to be called without `(storedb, key)`, so as not to generate errors with `powermanifold` and `productmanifold`, which cannot handle this.\n\n*   New geometries\n    *   Hyperbolic manifold in the hyperboloid model: [`hyperbolicfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/hyperbolic/hyperbolicfactory.m).\n    *   Tensors of fixed multilinear rank in Tucker format: [`fixedranktensorembeddedfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/fixedranktensors/fixedranktensorembeddedfactory.m).\n    *   Linear subspaces of linear spaces: [`euclideansubspacefactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/euclidean/euclideansubspacefactory.m).\n    *   Unitary matrices: [`unitaryfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/unitaryfactory.m).\n    *   Sparse matrices with fixed sparsity pattern (inefficient implementation): [`euclideansparsefactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/euclidean/euclideansparsefactory.m).\n    *   Manifold of $k$ positive definite matrices whose sum is the identity matrix: [`sympositivedefinitesimplexfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/symfixedrank/sympositivedefinitesimplexfactory.m) and [`sympositivedefinitesimplexcomplexfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/symfixedrank/sympositivedefinitesimplexcomplexfactory.m).\n\n*   New tools\n    *   Added [`randsym`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/randsym.m), [`randherm`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/randherm.m), [`ranskewh`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/randskewh.m) and [`randunitary`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/rotations/randunitary.m).\n    *   To match the existing multiherm, added [`multiskewh`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/multiskewh.m).\n    *   New tool [`qr_unique`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/qr_unique.m) to compute the unique Q-factor of a full column rank matrix.\n    *   Added tool to form the matrix of a linear operator between two tangent spaces: [`operator2matrix`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/operator2matrix.m). Useful for prototyping / debugging / analysis.\n\n*   Solvers\n    *   Added [gradient descent](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/arc/arc_gradient_descent.m) and [nonlinear conjugate gradient](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/arc/arc_conjugate_gradient.m) subproblem solvers for Riemannian ARC.\n    *   Improved numerical stability of Lanczos subproblem solver for ARC.\n    *   Changed default parameters of ARC and added checks to react if subproblem solver fails.\n    *   Added preconditioner support to `stochasticgradient` solver.\n\n*   Other changes\n    *   Fix to `productmanifold` so that it defines a method for the product only if that method is available for each element.\n    *   Added a new retraction to generalized Stiefel manifold, and made it the default retraction.\n    *   Minor changes to `multinomialfactory` and also added `exp`, `log` and `dist` functions.\n    *   For the manifold `fixedrankembeddedfactory`: added tools `triplet2matrix` and `matrix2triplet`, improved numerical behavior of the retraction for ill-conditioned tangent vectors and vec/mat replaced with lower dimensional isometries, which speed up use of `hessianspectrum` with that factory considerably.\n    *   Changes to `grassmannfactory`: tweaks to `ehess2rhess` for numerical accuracy and added `pairmean`.\n    *   Added exp, log and dist in the factory `symfixedrankYYfactory`.\n    *   Differentials of matrix functions (`dexpm, dlogm, dsqrtm, dfunm`) now also return the matrix function evaluation as a by-product.\n    *   The tool `checkdiff` (hence also `checkgradient`) now checks that the cost function is real.\n    *   The tool `checkhessian` now checks that the Hessian is a linear operator.\n    *   Added some extra checks to `checkmanifold`, notably to test vec/mat and dim; and improved test of exp/log/dist.\n    *   Refactored a number of retractions to use new tool `qr_unique`.\n    *   Several improvements to `multinomialdoublystochasticfactory`.\n    *   The tool `tangentspacefactory` should now work with factories involving a non-identity `tangent2ambient`.\n    *   Bug fix: memory usage could increase with inner iterations of tCG inside `trustregions` when using finite difference approximation of the Hessian. This is no longer the case.\n    *   Generally improved comments in several files.\n\n  \n\n### [Manopt 5.0](downloads/Manopt_5.0.zip), packaged September 10, 2018\n\n*   New solvers\n    *   ARC: adaptive regularization by cubics, [`arc`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/arc/arc.m), as an alternative to [`trustregions`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/trustregions/trustregions.m).\n\n*   Modifications to core engine\n    *   New counters system: especially useful to keep track of cost/grad/hess calls, and also of other important computations inside of (and possibly shared among) those. See [`incrementcounter`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/core/incrementcounter.m) and [`statscounter`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/statscounters.m) and the example [`using_counters`](https://github.com/NicolasBoumal/manopt/blob/master/examples/using_counters.m). As also shown in that example, the `problem.stopfun` handle for stopping criteria can access the counters, making it possible to stop for more sophisticated reasons than before.\n    *   The value of the cost function is now always cached. This leads to significant speed-ups in algorithms which use a line-search that evaluates the cost function (`steepestdescent`, `conjugategradient`, `barzilaiborwein`, `rlbfgs` included.)\n    *   The Riemannian gradient and Euclidean gradient are now cached by default. This is made practical by the new `remove()` functionalities of `StoreDB` (see below). This should be particularly useful for algorithms which use finite difference approximations of the Hessian, and when the user supplies a Euclidean Hessian (which, to be converted to Riemannian Hessian, requires the Euclidean gradient). This caching happens regardless of the user's own caching efforts, which should make the overall system easier to understand, as compared to previous versions of Manopt.\n    *   Core changes to [`StoreDB`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/core/StoreDB.m). Essentially two changes: (1) `purge()` now purges based on latest access time (access = read or write) rather than latest write time. (2) Added functions `remove()` and `removefirstifdifferent()`, which makes it possible for solvers and line-search algorithms to tell the `StoreDB` when a certain store is no longer relevant. For solvers that use the new `remove()` capabilities, `purge()` and `storedepth` now have very little importance. Furthermore, access is now more protected, with warnings issued if improper keys are accessed; this should make it easier to debug new solvers, and it already makes it possible to cache far fewer points. This rationalizes the choice of caching more things for points that matter (including cost and gradient). Line-search algorithms and all important solvers now use this system.\n    *   Added support for GPU. The following manifolds can now manipulate points and tangent vectors directly on the GPU, sometimes leading to huge speed-ups: `spherefactory`, `complexcirclefactory`, `stiefelfactory`, `grassmannfactory`; see the new example [`using_gpu`](https://github.com/NicolasBoumal/manopt/blob/master/examples/using_gpu.m).\n\n*   New tools\n    *   [`orthogonalizetwice`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/orthogonalizetwice.m) runs the rewritten orthogonalize tool twice for better accuracy when orthonormalizing an ill-conditioned basis of tangent vectors.\n    *   [`lyapunov_symmetric`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/lyapunov_symmetric.m) and [`lyapunov_symmetric_eig`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/lyapunov_symmetric_eig.m): solvers for Lyapunov equation $AX + XA = C$ with symmetric (or Hermitian) matrix $A$; acts as a pseudo-inverse. [`sylvester_nochecks`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/sylvester_nochecks.m): Matlab's sylvester solver without input checks (much faster for small matrices); These are now used everywhere in Manopt to remove dependency on `lyap`, which is a tool from the Control Toolbox.\n    *   [`stopifdeletedfile`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/stopifdeletedfile.m) and [`stopifclosedfigure`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/stopifclosedfigure.m): interactive stopping criteria that allow to stop a solver at any point, and let it finish gracefully and continue executing the rest of the code (also for execution on a distant server without GUI.)\n    *   [`checkmanifold`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/checkmanifold.m): began a new tool to run a collection of tests on manifold structures returned by factories; this is an early version to collect ideas as they come.\n\n*   New geometries\n    *   [`constantfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/euclidean/constantfactory.m), which can be used to fix certain variables in a [`productmanifold`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/productmanifold.m).\n    *   [`multinomialsymmetricfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/multinomial/multinomialsymmetricfactory.m) and [`multinomialdoublystochasticfactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/multinomial/multinomialdoublystochasticfactory.m) for doubly stochastic matrices with (strictly) positive entries, symmetric or not; contributed by [Ahmed Douik](https://scholar.google.com/citations?user=_i7hPbgAAAAJ&hl=en). Comes with a tool named [`doubly_stochastic`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/multinomial/doubly_stochastic.m) which implements Sinkhorn's algorithm to project to doubly-stochastic matrices.\n    *   `[positivefactory`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/manifolds/positive/positivefactory.m) deals with strictly positive numbers.\n\n*   Bug fixes\n    *   Fixed `M.retr2` (second-order retraction) in `rotationsfactory` for $k > 1$.\n\n*   Other changes\n    *   Installation instructions and `importmanopt` now include `savepath`.\n    *   [`orthogonalize`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/tools/orthogonalize.m) tool is now a modified Gram-Schmidt algorithm, which is more stable than the previous code.\n    *   `strict_inc_func` in [`rlbfgs`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/bfgs/rlbfgs.m) solver changed following recommendations of Wen Huang.\n    *   More heads up messages regarding the use of `M.tangent2ambient` with some manifolds.\n    *   tCG solver for `trustregions` inner problems is now more stable (numerically) for fine convergence steps.\n    *   Added inverse retraction for `grassmannfactory`, `stiefelfactory` (both QR and polar retractions, both of which are now available), `spherefactory`, `obliquefactory`, `rotationsfactory` (both QR and polar) and `complexcirclefactory`.\n    *   [`neldermead`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/neldermead/neldermead.m) solver now uses retraction instead of exponential.\n    *   If the exponential is not implemented for a manifold, `M.exp` is now no longer defined. It used to be that M.exp would issue a warning, then return the result of `M.retr`. But this causes a deluge of warnings in functions such as checkhessian. Now, instead, such tools check if M.exp is defined; if not, they use M.retr and issue a single message to inform the user of the consequences. If your personal code uses M.exp() without checking for manifolds that didn't have a proper implementation, you may want to check if this update breaks that part. It should be an easy fix.\n    *   Many small improvements here and there...\n\n  \n\n### [Manopt 4.0](downloads/Manopt_4.0.zip), packaged September 9, 2017\n\n*   New solvers\n    *   Limited-memory BFGS, [`rlbfgs`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/bfgs/rlbfgs.m): a Riemannian version of the quasi-Newton solver, implemented by Changshuo Liu based on work by Wen Huang et al.\n    *   [`barzilaiborwein`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/barzilaiborwein/barzilaiborwein.m): a gradient method with step-size selection based on a Barzilai-Borwein heuristic and line-search, contributed by Margherita Porcelli and Bruno Iannazzo.\n    *   [`stochasticgradient`](https://github.com/NicolasBoumal/manopt/blob/master/manopt/solvers/stochasticgradient/stochasticgradient.m): stochastic gradient algorithm on manifolds, together with its step-size selection algorithm `stepsize_sg` and a new example: `PCA_stochastic`.\n\n*   New tools\n    *   `tangent2vec`: given a tangent vector and an orthogonal basis on the corresponding tangent space, returns the coordinates of the vector in that basis.\n    *   `criticalpointfinder`: allows to find critical points of an optimization problem (useful to study saddle points of a non-convex problem for example.)\n\n*   New geometries\n    *   `realphasefactory`: to optimize over vectors with unit-modulus complex entries (phases) satisfying symmetries such that they could be the phases of the DFT (`fft`) of a real vector.\n\n*   Modifications to core engine\n    *   Added the capacity to provide a subgradient in a problem description, and to call for it in a solver. This, together with the tool `smallestinconvexhull`, is an important step toward integrating nonsmooth solvers in Manopt. See `canGetSubgradient` and `getSubgradient`. Define with `problem.subgrad(x, tol)`, where `x` is a point on a manifold `problem.M` and `tol` (nonnegative) is a tolerance in computing the subgradient (0 by default).\n\n*   Bug fixes\n    *   `tangentspacefactory` now has correct tangent, `egrad2rgrad` and `ehess2rhess` tools, including projections (thanks to a comment by Jesus Briales on the forum.)\n    *   For Euclidean manifolds, `M.tangent` functions were changed from identity to `M.proj`.\n\n*   Smaller things\n    *   `sympositivedefinitefactory` now has a cheaper yet second-order retraction, as suggested by Wen Huang.\n    *   `euclideancomplexfactory` now also handles multidimensional arrays, just like its real counterpart.\n    *   `smallestinconvexhull` tool now accepts a tolerance as optional input.\n    *   Further improved accuracy of distance function computations in all sphere / oblique manifolds with `asin` function instead of `acos` without branching, following discussions with Bruno Iannazzo and P.-A. Absil.\n    *   Two new options for `linesearch_hint`: allows to disable backtracking and allows to disable forcing of a non-increasing cost.\n    *   `fixedrankembeddedfactory` now has an orthographic retraction provided by Teng Zhang as `M.retr_ortho`.\n    *   Many, many smaller improvements to code and documentation.\n\n  \n\n### [Manopt 3.0](downloads/Manopt_3.0.zip), packaged November 12, 2016.\n\n*   Code moved to [GitHub](https://github.com/NicolasBoumal/manopt)! Now accepting pull requests, and accelerating distribution of patches.\n*   Bug fixes\n    *   Logic bug in `linesearch`: `lsmem` handling corrected thanks to Wen Huang. The default line-search algorithm for steepest descent should now be much faster.\n    *   Logic bug in `getGradient` when using `problem.grad` with a different number of inputs compared to `problem.cost`.\n    *   Corrected logic in plotting step of example `low_rank_dist_completion`.\n    *   `obliquefactory`, in transposed mode, had an incorrect `M.log`.\n\n*   Modifications to core engine\n    *   Added capability to obtain a partial gradient (Euclidean or Riemannian) of a cost function by specifying `problem.partialgrad` or `problem.partialegrad` coupled with `problem.ncostterms`. This is an important step to simplify the future addition of stochastic gradient methods. Use cases are: if `problem.cost` is expressed as a sum of `problem.ncostterms` terms, then `problem.partialgrad` accepts a point `x` and an index set sample so that only the gradient with respect to terms indexed in sample is computed and returned.\n    *   Added possibility to define `problem.approxgrad`, to provide an approximation of the gradient. This can be populated with a generic gradient approximation based on finite differences via `approxgradientFD`. Solvers do this by default if they need a gradient and none is given. This feature is slow, but may be useful for prototyping. It is slow because Manopt generates an orthonormal basis of the tangent space, and compute a finite difference approximation of the directional derivative along each basis vector to get an approximate gradient (see also next item and new example `thomson_problem`.)\n    *   `getGradient` now knows how to compute the gradient if the directional derivatives are accessible. This involves generating an orthonormal basis of the tangent space at the current point, then evaluating the directional derivative along each basis vector and taking the appropriate linear combination. This is very slow, especially for high dimensional manifolds.\n\n*   New tools\n    *   `lincomb` for a generic way of computing a long linear combination of tangent vectors.\n    *   `grammatrix` to compute the Gram matrix of a collection of tangent vectors.\n    *   `orthogonalize` to orthogonalize a basis of tangent vectors.\n    *   `tangentorthobasis` to obtain a random orthonormal basis of a tangent space, generically.\n    *   `smallestinconvexhull` to compute the smallest tangent vector in the convex hull of a given collection of tangent vectors.\n    *   `hessianmatrix` to get a matrix representing the Hessian at a point in an orthonormal tangent basis.\n    *   `checkretraction` allows, for manifolds which have a correct exponential implemented, to verify the order of agreement between the retraction and the exponential, in order to determine numerically if the retraction is first- or second-order.\n\n*   New examples\n    *   `elliptope_SDP` solves SDPs over positive semidefinite matrices with diagonal of all-ones. This should run faster than the Max-Cut example for quite a few things.\n    *   `elliptope_SDP_complex`, same as above for complex matrices. This solves the SDP which appears in PhaseCut and phase synchronization, for example.\n    *   `thomson_problem` to illustrate the new features that allow to not specify the gradient of the cost (slow, but good for prototyping.)\n\n*   New geometries\n    *   `skewsymmetricfactory` for skew-symmetric matrices (Euclidean geometry)\n    *   `obliquecomplexfactory`, to work with complex matrices whose columns (or rows) all have unit norm\n\n*   Modifications to previous behavior\n    *   `symfixedrankYYcomplexfactory` now has a Riemannian metric matching that of `euclideanfactory` (it was scaled down by 2 as compared to previous Manopt versions.) This makes it easier to switch between those two geometries. Relevant changes propagated to `radio_interferometric_calibration`.\n    *   `hessianextreme` now returns the info structure returned by the internal solver call. The helper tool `tangentspherefactory` now incorporates extra projections to ensure the vector returned by `hessianextreme` is indeed a tangent vector (former version could suffer from numerical drift.)\n    *   At the end of `generalized_eigenvalue_computation`, added a rotation of `Xsol` to match the definition of generalized eigenvectors (the eigenvalues were fine.)\n\n*   Numerous minor improvements; highlights:\n    *   `rotationsfactory` now has a function `M.retr2` which is a second-order retraction.\n    *   `spherefactory` and related sphere geometries now have a distance function `M.dist` which is orders of magnitude more accurate for close-by points.\n    *   `neldermead` now respects `options.verbosity < 2`.\n    *   `plotprofile` and `surfprofile` have now mostly optional inputs, making them easier to call for a quick glimpse at the cost function.\n\n  \n\n### [Manopt 2.0](downloads/Manopt_2.0.zip), packaged July 6, 2015.\n\n*   Modifications to core engine\n    *   Revamped the internal hashing system used for caching: Manopt no longer uses hashing, which leads to speed-ups and cleaner internal code. Solvers need to be adapted consequently, to use the `StoreDB` class.\n    *   The caching system now offers a shared memory, which can be accessed and modified at all points. This can notably be used to count function evaluations, or to produce Hessian approximations which require previous iterations memory (such as BFGS for example).\n    *   Because of the new class StoreDB, Octave compatibility is unfortunately compromised until Octave supports Matlab's classdef object oriented programming.\n    *   New cost description function: `sqrtprecon`, for the square root of the preconditioner (used in `hessianspectrum`).\n    *   The privatetools directory is now named core, and is documented.\n\n*   New geometries:\n    *   `specialeuclideanfactory` (for rigid body motions).\n    *   `multinomialfactory` (for probability distributions, i.e., simplex elements).\n    *   `euclideancomplexfactory` (for complex matrices).\n    *   `spheresymmetricfactory` (for unit norm symmetric matrices)\n    *   `stiefelcomplexfactory` (for complex orthonormal matrices)\n    *   `stiefelgeneralizedfactory` (for matrices which are orthonormal in another basis)\n    *   `stiefelstackedfactory` (for multiple orthonormal matrices of same size, represented in stacked form)\n    *   `grassmanncomplexfactory` (complex Grassmannian, for complex subspaces of $\\mathbb{C}^n$)\n    *   `grassmanngeneralizedfactory` (for optimization over subspaces, represented via orthonormal bases in a non-standard basis)\n    *   `symfixedrankYYcomplexfactory` (for complex fixed-rank positive semidefinite matrices)\n    *   `fixedrankfactory_tucker_preconditioned` (for optimization over fixed-rank tensors, in Tucker format)\n    *   `centeredmatrixfactory` (matrices whose rows or columns sum to zero)\n\n*   Other improvements:\n    *   `spherecomplexfactory`: added `ehess2rhess`.\n    *   `complexcirclefactory`: distance function corrected.\n    *   Contributions more explicitly acknowledged in some files, notably via BibTex entries.\n    *   `hessianspectrum`: output eigenvalues now sorted, and the square root of the preconditioner, if available, must now be given through `problem.sqrtprecon`, not as an additional input. An option now allows to ask for the Hessian spectrum or the preconditioned Hessian spectrum, explicitly.\n    *   New management of Hessian approximations and preconditioners. The file `hessianapproxFD` encapsulates Manopt's standard approximation, with access to options. A first generic preconditioner allows solving linear systems involving the Hessian (for Newton-type methods): `preconhessiansolve`.\n    *   Line-search algorithms now work with `StoreDB`, and as a result have a simplified calling pattern. There is also a new one: `linesearch_decrease`.\n\n*   New [tools](https://github.com/NicolasBoumal/manopt/tree/master/manopt/tools):\n    *   `manoptsolve`, to automatically call an appropriate solver (or a dynamically chosen solver) on a problem structure.\n    *   `statsfunhelper`, to ease the use of `options.statsfun`, which allows recording custom statistics at each iteration during optimization. See the tutorial.\n    *   `hessianextreme`, to compute minimal and maximal eigenvectors and eigenvalues of the Hessian of a cost function.\n    *   `surfprofile`, to complement `plotprofile`: used to plot a cost function restricted to a 1D or 2D subspace of a tangent space.\n    *   `tangentspherefactory` and `tangentspacefactory`, to obtain a manifold representation of the unit sphere on the tangent space to a manifold at a given point, or a representation of the whole tangent space. Useful to solve optimization problems over those spaces.\n    *   `dfunm`, `dexpm`, `dlogm`, `dsqrtm` : compute the Fréchet derivatives of matrix functions.\n\n*   Trust-region solver:\n    *   As of Manopt 1.0.6, the inner solver tCG monitors the model cost; an (innocuous) logic bug was corrected there. Theory behind this feature is now better understood (a paper reference + BibTex was added).\n    *   Warns if many TR+ / TR- steps are detected, to suggest changing parameter values.\n    *   Uses safe version of tic/toc timers (originally because Octave now supports them).\n    *   In case `rho` evaluates to `NaN` (which really should not happen), the code now ensures that the step is rejected and the radius decreased, thus preventing stagnation. In an adversely crafted example, this helped the solver escape the region where NaN's appear (again, this is not supposed to happen, but it's good to handle it nonetheless).\n    *   Many more comments inside the code.\n\n*   New [examples](https://github.com/NicolasBoumal/manopt/tree/master/examples):\n    *   `robust_pca`, illustrating how to smooth a nonsmooth cost function (here, on the Grassmann manifold).\n    *   `low_rank_dist_completion`, illustrating usage of Manopt as a building block in a rank-incremental optimization algorithm for SDP.\n    *   `dominant_invariant_subspace_complex`, adapting `dominant_invariant_subspace` to the complex case.\n    *   `radio_interferometric_calibration`, illustrating the usage of the complex fixed-rank manifold.\n    *   `nonlinear_eigenspace`, showing how to address certain nonlinear eigenvalue problems.\n    *   `essential_svd`, demonstrating the new geometry `essentialfactory`.\n    *   `generalized_eigenvalue_computation`, shows how to use `grassmanngeneralizedfactory` to solve generalized eigenvalue problems.\n    *   `shapefit_smoothed`, does sensor network localization from pairwise direction measurements, following the [ShapeFit](https://arxiv.org/abs/1506.01437) paper.\n\n  \n\n### [Manopt 1.0.7](downloads/Manopt_1.0.7.zip), packaged August 12, 2014.\n\n*   Added the `ehess2rhess` function to `complexcirclefactory`.\n*   Major revision of `fixedrankembeddedfactory` for support of optimization over fixed-rank matrices. It is now better documented, comes with an example called `low_rank_matrix_completion`, and also has support for `ehess2rhess` and `tangent2ambient`, a proper vector transport, works with the `hessianspectrum` tool, ... This revision was executed with the precious and frequent help of Bart Vandereycken, who first described this geometry in a [paper](https://epubs.siam.org/doi/abs/10.1137/110845768).\n*   All solvers now also return the `options` structure, to make it easier to investigate what options a solver uses and what their default values are.\n*   It is now possible to specify a line-search hint function in the `problem` structure; the result of that function will be used as a first guess in an Armijo backtracking line-search procedure, `linesearch_hint`. This is very useful if, for a given problem, you are able to make a good guess at how far along the search line one should look. It is much easier this way than with the previous way, which required implementing a whole new line-search algorithm.\n*   Generally improved textual outputs (warnings, iteration information, stopping reasons...).\n*   The documentation (tutorial, reference) was updated to reflect all of these changes.\n*   The `sympositivedefinitefactory` now has the correct `dim()` function and implements a new vector transport as explained in the [example](https://github.com/NicolasBoumal/manopt/blob/master/examples/positive_definite_intrinsic_mean.m).\n\n  \n\n### [Manopt 1.0.6](downloads/Manopt_1.0.6.zip), packaged June 25, 2014.\n\n*   For uses of the `trustregions` solver with a nonlinear approximation of the Hessian (such as, for example, the default one if you do not specify a Hessian at all), the truncated-CG algorithm now explicitly checks that the model cost decreases with (inner) iterations. If an increase is witnessed (which is bad), tCG now returns the best step so far, which is always at least the Cauchy step.\n*   The `sympositivedefinitefactory` geometry for positive definite matrices was revised. It had a number of mistakes in it due to an incorrect assumption. You can access the file before 1.0.6 is released on [the forum](https://groups.google.com/forum/embed/?place=forum%2Fmanopttoolbox&showsearch=true&showtabs=false&theme=default#%21topic/manopttoolbox/nyX2rhKB9x4).\n*   Small bug fix in `packing_on_the_sphere` example, along an improvement of how the smoothing term is computed numerically.\n*   Added a Riemannian Hessian conversion tool for the Stiefel manifold, `ehess2rhess`.\n*   Added a new (Euclidean) manifold, `symmetricfactory`, to deal with symmetric matrices.\n*   Multiple enhancements and bug fixes for the embedded geometry of fixed rank matrices `fixedrankembeddedfactory`: now works with `checkgradient`, changed hash and typical dist, and the vector transport is now correct (it was wrong before, leading to failure of CG and RTR-FD). Thanks to Bart Vandereycken for the correct code.\n*   Random vector generation in Stiefel and Grassmann now make more sense.\n*   `PSO` (Particle Swarm Optimization) solver debugged to work with product and power manifolds too.\n*   Bug fix in `grassmannfactory` retraction for $k > 1$, and added final re-orthonormalization at the end of exponential map following forum discussions.\n*   The functions in `elliptopefactory` are now a tad faster, using `bsxfun`.\n\n  \n\n### [Manopt 1.0.5](downloads/Manopt_1.0.5.zip), packaged January 2nd, 2014.\n\n*   Many files are now better commented and documented. In particular, the solvers now have quite complete documentation in code, available using Matlab's help command.\n*   The trust region solver was modified substantially. The algorithm is now slightly different from the previous versions, but is cleaner in its handling of errors, and behaves almost the same as before for normal operations. In particular, the fine-convergence heuristic has been changed to match a standard heuristic from the literature (see in code for references and the relevant option). The online documentation (UPDATE 2024: this documentation was deprecated) was extended as well. The original trust region radius (`Delta0` and `Delta_bar`) are now interpreted correctly. Their values are different from earlier Manopt versions as a result. if you get a lot of TR+ or TR- for the first few iterations, you may want to tweak those options.\n*   New geometry: `sympositivedefinitefactory`, for symmetric, positive definite matrices. Related example script: `positive_definite_karcher_mean`.\n*   Line search algorithms have been heavily modified. The basic line search for example is now invariant under shifting and rescaling of the cost function, and the built-in line search algorithms now accept options too. Line searches now do not expect to be given a normalized search direction anymore, and they can decide whether to use the norm as supplemental information or to be unaffected by it. For example, the default line search for the conjugate gradient solver (the adaptive line search) is not invariant to the norm of the search direction.\n*   New example for sparse PCA via optimization on the Stiefel manifold.\n*   Potential bug (that never triggered) with `purgeStoredb` corrected.\n\n  \n\n### [Manopt 1.0.4](downloads/Manopt_1.0.4.zip), packaged August 22nd, 2013.\n\n*   This release is a first step toward compatibility with Octave. We're not there yet, but in the examples folder, you will find `maxcut_octave` (UPDATE: removed in 1.0.8), which should run in Octave 3.6.4. In there, more info about compatibility issues and limitations are provided.\n*   Manopt is not organized in a Matlab package anymore (so folders are called folder and not +folder): no `import` anymore. Simply call `importmanopt` to add all Manopt functions to the path, once.\n*   Sign error in right-hand side of Lyapunov equation in `elliptopefactory.projection` corrected.\n\n  \n\n### [Manopt 1.0.3](downloads/Manopt_1.0.3.zip), packaged July 26, 2013.\n\n*   The new [examples](https://github.com/NicolasBoumal/manopt/tree/master/examples) directory now contains documented examples.\n*   Added manifolds `spectrahedron` and `elliptope`, for symmetric positive semidefinite fixed-rank matrices with constraints on the diagonal or the trace. Notably useful for max-cut like SDP relaxations (see examples) and correlation matrix approximation / completion etc.\n*   The Riemannian gradient and Hessian may be given via their Euclidean counterparts, using `problem.egrad` and `problem.ehess`.\n*   Improved `checkgradient` and `checkhessian` tools.\n*   Added Riemannian log map for the Grassmann manifold.\n*   Made `egrad2rgrad` and `ehess2rhess` available in more geometries.\n*   Added the tool `hessianspectrum` to compute the eigenvalues of the Hessian (with or without preconditioner).\n*   Added notions of `tangent` and `tangent2ambient` to manifolds.\n*   Added notions of `vec` and `mat` for manifolds, to represent tangent vectors as column vectors.\n\n  \n\n### [Manopt 1.0.2](downloads/Manopt_1.0.2.zip), packaged June 11, 2013.\n\n*   Improved `trustregions` solver (e.g., avoids a redundant Hessian computation).\n*   Improved `conjugategradient` solver: now admits preconditioning.\n*   Reorganized fixedrank geometries (not backward compatible).\n*   Many small improvements and bug fixes.\n\n  \n\n### [Manopt 1.0.1](downloads/Manopt_1.0.1.zip), packaged February 7, 2013.\n\n  \n\n### [Manopt 1.0](downloads/Manopt_1.0.zip), packaged January 3rd, 2013.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","include-in-header":{"file":"_header.html"},"highlight-style":"pygments","css":["styles.css"],"toc":false,"html-math-method":"mathjax","strip-comments":true,"output-file":"downloads.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","crossref":{"eq-prefix":"Eq."},"theme":{"dark":["darkly","custom_darkly.scss"],"light":"sandstone"},"grid":{"sidebar-width":"230px","body-width":"800px","margin-width":"270px","gutter-width":"1.5rem"},"anchor-sections":true,"smooth-scroll":true,"title":"Downloads","subtitle":"Latest version and change logs","sidebar":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}